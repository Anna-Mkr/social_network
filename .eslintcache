[{"E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\App.tsx":"1","E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\index.tsx":"2","E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\redux\\store.tsx":"3","E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\components\\Navbar\\Navbar.tsx":"4","E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"5","E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"6","E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\components\\Profile\\Profile.tsx":"7","E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\components\\Dialogs\\Dialogs.tsx":"8","E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\components\\Header\\Header.tsx":"9","E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"10","E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx":"11","E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\redux\\profile-reducer.tsx":"12","E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\redux\\sidebar-reducer.tsx":"13","E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\redux\\redux-store.tsx":"14","E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"15","E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx":"16","E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"17","E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\reportWebVitals.ts":"18","E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\redux\\dilogs-reducer.tsx":"19","E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\components\\Users\\Users.tsx":"20","E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\redux\\users-reducer.tsx":"21","E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\components\\Users\\UsersContainer.tsx":"22"},{"size":1154,"mtime":1626097873449,"results":"23","hashOfConfig":"24"},{"size":671,"mtime":1626098732957,"results":"25","hashOfConfig":"24"},{"size":2893,"mtime":1621795637315,"results":"26","hashOfConfig":"24"},{"size":943,"mtime":1609163878374,"results":"27","hashOfConfig":"24"},{"size":457,"mtime":1610376702547,"results":"28","hashOfConfig":"24"},{"size":1369,"mtime":1625314985242,"results":"29","hashOfConfig":"24"},{"size":442,"mtime":1623057561849,"results":"30","hashOfConfig":"24"},{"size":1491,"mtime":1627590451381,"results":"31","hashOfConfig":"24"},{"size":311,"mtime":1624287796403,"results":"32","hashOfConfig":"24"},{"size":481,"mtime":1619353666867,"results":"33","hashOfConfig":"24"},{"size":320,"mtime":1610911928362,"results":"34","hashOfConfig":"24"},{"size":1425,"mtime":1639230111678,"results":"35","hashOfConfig":"24"},{"size":153,"mtime":1621804204920,"results":"36","hashOfConfig":"24"},{"size":528,"mtime":1626028455536,"results":"37","hashOfConfig":"24"},{"size":1028,"mtime":1623057561771,"results":"38","hashOfConfig":"24"},{"size":713,"mtime":1624286827874,"results":"39","hashOfConfig":"24"},{"size":492,"mtime":1624288943598,"results":"40","hashOfConfig":"24"},{"size":425,"mtime":1606404966318,"results":"41","hashOfConfig":"24"},{"size":1517,"mtime":1624289110391,"results":"42","hashOfConfig":"24"},{"size":2136,"mtime":1626098866575,"results":"43","hashOfConfig":"24"},{"size":1124,"mtime":1626097320302,"results":"44","hashOfConfig":"24"},{"size":670,"mtime":1626086090157,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1rq6fh3",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"81"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"51"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"51"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"48"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"51"},"E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\App.tsx",[],["106","107"],"E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\index.tsx",[],["108","109"],"E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\redux\\store.tsx",[],"E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\components\\Navbar\\Navbar.tsx",[],"E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",["110"],"import React, {FC} from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css'\r\n\r\nexport type DialogItemType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nconst DialogItem: React.FC <DialogItemType> = (props) => {\r\n\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;",["111","112"],"E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",["113","114"],"import React, {ChangeEvent} from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\n\r\n\r\n\r\nexport type PostType = {\r\n\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nexport type MyPostsType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n    updateNewPostText:(e:string) => void\r\n    addPost: () => void\r\n}\r\n\r\n\r\n\r\nconst MyPosts = (props: MyPostsType) => {\r\n\r\n\r\n    let postsElements =\r\n        props.posts.map( (p: { message: string; likesCount: number; }) => <Post message={p.message} likesCount={p.likesCount}/>)\r\n\r\n\r\n    const onAddPost = () => {\r\n        props.addPost();\r\n    }\r\n\r\n    const changeNewTextCallback = (e: ChangeEvent<HTMLTextAreaElement>)=>{\r\n        props.updateNewPostText(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>\r\n                My posts\r\n            </h3>\r\n            <div>\r\n                <textarea onChange={changeNewTextCallback} value={props.newPostText}/>\r\n            </div>\r\n            <div>\r\n                <button onClick={ onAddPost }>Add post</button>\r\n            </div>\r\n            <div className={s.posts}>\r\n                { postsElements  }\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default MyPosts;","E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\components\\Profile\\Profile.tsx",["115"],"import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {StoreType} from \"../../redux/store\";\r\n\r\n\r\nconst Profile = (props: any) => {\r\n\r\n    return (\r\n        <div >\r\n            <ProfileInfo />\r\n            <MyPostsContainer\r\n                // @ts-ignore\r\n                store={props.store}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\components\\Dialogs\\Dialogs.tsx",[],"E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\components\\Header\\Header.tsx",["116"],"E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["117"],"import React from \"react\";\r\nimport s from './Post.module.css'\r\nimport {PostType} from \"../MyPosts\";\r\n\r\n\r\nconst Post = (props:PostType) => {\r\n    return (\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <img src='https://i.pinimg.com/originals/9f/8f/cd/9f8fcdc389c0d84cc88e3f7ca81b7c4e.jpg'/>\r\n            {props.message}\r\n\r\n            <div>\r\n                <span>like {props.likesCount}</span>\r\n            </div>\r\n\r\n\r\n        </div>)\r\n}\r\n\r\nexport default Post;\r\n","E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx",["118"],"import React, {FC} from 'react'\r\nimport s from './../Dialogs.module.css'\r\n\r\nexport type MessageType = {\r\n    message: string\r\n}\r\n\r\nconst Message: React.FC <MessageType> = (props) => {\r\n    return (\r\n\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Message;",["119","120"],"E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\redux\\profile-reducer.tsx",[],"E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\redux\\sidebar-reducer.tsx",[],["121","122"],"E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\redux\\redux-store.tsx",[],"E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["123","124"],"import React, {ChangeEvent} from \"react\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {RootStateType, StoreType} from \"../../../redux/store\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nexport type PostType = {\r\n\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nexport type MyPostsContainerType = {\r\n    store: StoreType\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateType) => {\r\n    return{\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        updateNewPostText: (text: string) => {\r\n            let action = updateNewPostTextActionCreator(text);\r\n            dispatch(action);\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator());\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx",["125","126"],"import React, {ChangeEvent} from 'react'\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dilogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state: any) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        updateNewMessageBody:(body: any) => {\r\n\r\n            dispatch(updateNewMessageBodyCreator(body));\r\n        } ,\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator());\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps) (Dialogs);\r\n\r\nexport default DialogsContainer;","E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["127"],"import React from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\n\r\n    const ProfileInfo = () => {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <img className={s.photo} src='https://i.artfile.ru/2880x1800_953837_[www.ArtFile.ru].jpg'/>\r\n                </div>\r\n                <div className={s.descriptionBlock}>\r\n                    Ava + description\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\nexport default ProfileInfo;\r\n","E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\reportWebVitals.ts",[],"E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\redux\\dilogs-reducer.tsx",["128"],"import {ChangeEvent} from \"react\";\r\n\r\nconst UPDATE_NEW_MESSAGE_BODY = \"UPDATE-NEW-MESSAGE-BODY\";\r\nconst SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\ntype dialogsActionType = {\r\n    type: \"UPDATE-NEW-MESSAGE-BODY\" | \"SEND_MESSAGE\"\r\n\r\n}\r\n\r\nlet initialSate = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrey'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Victor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'},\r\n    ],\r\n    newMessageBody: \"\"\r\n}\r\n\r\nconst dialogsReducer = (state: any = initialSate, action: any) => {\r\n\r\n\r\n    switch (action.type) {\r\n\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.body\r\n            };\r\n        case SEND_MESSAGE:\r\n            let body = state.newMessageBody;\r\n            return  {\r\n                ...state,\r\n                newMessageBody: \"\",\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const sendMessageCreator = () => ({type: SEND_MESSAGE})\r\n\r\nexport const updateNewMessageBodyCreator = (body: ChangeEvent<HTMLTextAreaElement>) => ({\r\n    type: UPDATE_NEW_MESSAGE_BODY, body: body\r\n})\r\n\r\n\r\nexport default dialogsReducer;","E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\components\\Users\\Users.tsx",["129"],"import React from \"react\";\r\nimport styles from \"./users.module.css\"\r\n\r\nlet Users = (props: any) => {\r\n    if (props.users.length === 0 ) {\r\n        props.setUsers([{\r\n            id: 1,\r\n            photoUrl: 'https://shapka-youtube.ru/wp-content/uploads/2021/02/prikolnaya-avatarka-dlya-patsanov.jpg',\r\n            followed: false,\r\n            fullName: 'Dmitry',\r\n            status: 'I am a boss',\r\n            location: {city: 'Minsk', country: 'Belarus'}\r\n        },\r\n            {\r\n                id: 2,\r\n                photoUrl: 'https://www.meme-arsenal.com/memes/a80862e524bb69b162383509b1edef0b.jpg',\r\n                followed: true,\r\n                fullName: 'Sasha',\r\n                status: 'I am a boss too',\r\n                location: {city: 'Moscow', country: 'Russia'}\r\n            },\r\n            {\r\n                id: 3,\r\n                followed: false,\r\n                photoUrl: 'https://avatanplus.com/files/resources/mid/567e8e507ce05151de5bea80.jpg',\r\n                fullName: 'Andrew',\r\n                status: 'I am a boss too',\r\n                location: {city: 'Kiev', country: 'Ukraine'}\r\n            }])\r\n    }\r\n\r\n\r\n    return(<div>\r\n            {\r\n                props.users.map( (u: any) => <div key={u.id}>\r\n                        <span>\r\n                            <div>\r\n                                <img src={u.photoUrl} className={styles.userPhoto}/>\r\n                            </div>\r\n                            <div>\r\n                                    {u.followed ? <button onClick={ () => {props.unfollow(u.id)} }>Unfollow </button>\r\n                                        : <button onClick={ () => {props.follow(u.id)} }>Follow</button>}\r\n                            </div>\r\n\r\n<span>\r\n    <span>\r\n        <div>{u.fullName}</div>\r\n        <div>{u.status}</div>\r\n    </span>\r\n    <span>\r\n        <div>{u.location.country}</div>\r\n        <div>{u.location.city}</div>\r\n    </span>\r\n</span>\r\n\r\n                        </span>\r\n                        <span></span>\r\n\r\n\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\redux\\users-reducer.tsx",[],"E:\\put-samuraya-s-nachala-tsx-yarn\\my-app\\src\\components\\Users\\UsersContainer.tsx",["130"],"import React from \"react\";\r\nimport Users from \"./Users\";\r\nimport {connect} from \"react-redux\";\r\nimport {followAC, setUsersAC, unfollowAC} from \"../../redux/users-reducer\";\r\n\r\nlet mapStateToProps = (state: any) => {\r\n    return {\r\n        users: state.usersPage.users\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\nfollow: (userId: any) => {\r\n    dispatch(followAC(userId));\r\n},\r\n        unfollow: (userId: any) => {\r\n            dispatch(unfollowAC(userId))\r\n        },\r\n        setUsers: (users: any) => {\r\n            dispatch(setUsersAC(users))\r\n        },\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Users);",{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"131","replacedBy":"135"},{"ruleId":"133","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":1,"column":16,"nodeType":"139","messageId":"140","endLine":1,"endColumn":18},{"ruleId":"131","replacedBy":"141"},{"ruleId":"133","replacedBy":"142"},{"ruleId":"137","severity":1,"message":"143","line":4,"column":9,"nodeType":"139","messageId":"140","endLine":4,"endColumn":29},{"ruleId":"137","severity":1,"message":"144","line":4,"column":31,"nodeType":"139","messageId":"140","endLine":4,"endColumn":61},{"ruleId":"137","severity":1,"message":"145","line":4,"column":9,"nodeType":"139","messageId":"140","endLine":4,"endColumn":18},{"ruleId":"146","severity":1,"message":"147","line":7,"column":13,"nodeType":"148","endLine":8,"endColumn":96},{"ruleId":"146","severity":1,"message":"147","line":9,"column":13,"nodeType":"148","endLine":9,"endColumn":102},{"ruleId":"137","severity":1,"message":"138","line":1,"column":16,"nodeType":"139","messageId":"140","endLine":1,"endColumn":18},{"ruleId":"131","replacedBy":"149"},{"ruleId":"133","replacedBy":"150"},{"ruleId":"131","replacedBy":"151"},{"ruleId":"133","replacedBy":"152"},{"ruleId":"137","severity":1,"message":"153","line":1,"column":8,"nodeType":"139","messageId":"140","endLine":1,"endColumn":13},{"ruleId":"137","severity":1,"message":"154","line":1,"column":16,"nodeType":"139","messageId":"140","endLine":1,"endColumn":27},{"ruleId":"137","severity":1,"message":"153","line":1,"column":8,"nodeType":"139","messageId":"140","endLine":1,"endColumn":13},{"ruleId":"137","severity":1,"message":"154","line":1,"column":16,"nodeType":"139","messageId":"140","endLine":1,"endColumn":27},{"ruleId":"146","severity":1,"message":"147","line":8,"column":21,"nodeType":"148","endLine":8,"endColumn":112},{"ruleId":"137","severity":1,"message":"155","line":6,"column":6,"nodeType":"139","messageId":"140","endLine":6,"endColumn":23},{"ruleId":"146","severity":1,"message":"147","line":38,"column":33,"nodeType":"148","endLine":38,"endColumn":85},{"ruleId":"137","severity":1,"message":"153","line":1,"column":8,"nodeType":"139","messageId":"140","endLine":1,"endColumn":13},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],["156"],["157"],"@typescript-eslint/no-unused-vars","'FC' is defined but never used.","Identifier","unusedVar",["156"],["157"],"'addPostActionCreator' is defined but never used.","'updateNewPostTextActionCreator' is defined but never used.","'StoreType' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["156"],["157"],["156"],["157"],"'React' is defined but never used.","'ChangeEvent' is defined but never used.","'dialogsActionType' is defined but never used.","no-global-assign","no-unsafe-negation"]